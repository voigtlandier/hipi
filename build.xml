<project basedir="." default="all">

  <target name="setup">

    <echo message="Setting properties for build task..."/>

    <!-- IMPORTANT: You must update the following two properties according to your Hadoop setup -->
 <property name="hadoop.home" value="/usr/local/Cellar/hadoop/2.6.0/libexec/share/hadoop" />
    <property name="hadoop.version" value="2.6.0" />

    <property name="hipi.version" value="2.1" />

    <!-- Hadoop dependencies -->
    <property name="hadoop.classpath" value="${hadoop.home}/common/hadoop-common-${hadoop.version}.jar:${hadoop.home}/mapreduce/hadoop-mapreduce-client-core-${hadoop.version}.jar:${hadoop.home}/common/lib/commons-cli-1.2.jar:${hadoop.home}/common/lib/commons-io-2.4.jar:${hadoop.home}/common/lib/commons-lang-2.6.jar:${hadoop.home}/common/lib/hadoop-auth-${hadoop.version}.jar:${hadoop.home}/hdfs/hadoop-hdfs-${hadoop.version}.jar:${hadoop.home}/common/hadoop-nfs-${hadoop.version}.jar:/Users/zverham/Documents/Development/opencv/build/bin/opencv-2411.jar" />

    <!-- External dependencies -->
    <property name="junit.jar" value="${hadoop.home}/common/lib/junit-4.11.jar" />
    <property name="hamcrest.jar" value="${hadoop.home}/common/lib/hamcrest-core-1.3.jar" />
    <property name="commons.logging.jar" value="${hadoop.home}/common/lib/commons-logging-1.1.3.jar" />
    <property name="guava.jar" value="${hadoop.home}/common/lib/guava-11.0.2.jar" />
    <property name="commons.collections.jar" value="${hadoop.home}/common/lib/commons-collections-3.2.1.jar" />
    <property name="commons.lang.jar" value="${hadoop.home}/common/lib/commons-lang-2.6.jar" />
    <property name="commons.configuration.jar" value="${hadoop.home}/common/lib/commons-configuration-1.6.jar" />
    <property name="slf4j.api.jar" value="${hadoop.home}/common/lib/slf4j-api-1.7.5.jar" />
    <property name="log4j.jar" value="${hadoop.home}/common/lib/log4j-1.2.17.jar" />
    <property name="avro.jar" value="${hadoop.home}/common/lib/avro-1.7.4.jar" />

    <!-- https://drewnoakes.com/code/exif/ -->
    <property name="xmpcore.jar" value="./3rdparty/xmpcore-5.1.2.jar" />
    <property name="metadata.jar" value="./3rdparty/metadata-extractor-2.8.1.jar" />

    <!-- https://code.google.com/p/json-simple -->
    <property name="json.jar" value="./3rdparty/json-simple-1.1.1.jar"/>

    <!-- TwleveMonkeys ImageIO extensions -->
    <!-- https://github.com/haraldk/TwelveMonkeys -->
    <property name="twelvemonkeys.jar" value="./3rdparty/twelvemonkeys/*" />
  	
  	
  	<!-- opencv -->
    <property name="opencv.jar" value="/Users/zverham/Documents/Development/opencv/build/bin/opencv-2411.jar" />

    <echo message="Properties set."/>
  </target>

  <target name="test_settings">
    <echo message="Confirming that hadoop settings are set..."/>
    <fail unless="hadoop.home" message="The property hadoop.home was not specified.${line.separator}You must specify the home directory for Hadoop in the build.xml file.${line.separator}See http://hipi.cs.virginia.edu/gettingstarted.html for details."/>
    <fail unless="hadoop.version" message="The property hadoop.version was not specified.${line.separator}You must specify the version of Hadoop you are using in the build.xml file.${line.separator}See http://hipi.cs.virginia.edu/gettingstarted.html for details."/>
    <fail message="File does not exist: ${hadoop.home}/common/hadoop-common-${hadoop.version}.jar${line.separator}Check the hadoop.home and hadoop.version properties in build.xml.${line.separator}See http://hipi.cs.virginia.edu/gettingstarted.html for details.">
      <condition>
        <not>
          <available file="${hadoop.home}/common/hadoop-common-${hadoop.version}.jar" />
        </not>
      </condition>      
    </fail>
    <echo message="Properties are specified properly."/>
  </target>

  <target name="compile" depends="setup,test_settings,hipi">

    <mkdir dir="bin" />
    
    <!-- Compile -->
    <javac debug="yes" nowarn="on" includeantruntime="no" srcdir="${srcdir}" destdir="./bin" classpath="${hadoop.classpath}:./lib/hipi-${hipi.version}.jar">
      <compilerarg value="-Xlint:deprecation" />
      <compilerarg value="-Xlint:unchecked" />
    </javac>
    
    <!-- Create the jar -->
    <jar destfile="${jardir}/${jarfilename}" basedir="./bin">
      <zipfileset src="./lib/hipi-${hipi.version}.jar" />
      <manifest>
	<attribute name="Main-Class" value="${mainclass}" />
      </manifest>
    </jar>
    
  </target>

  <!-- Builds HIPI Library -->
  <target name="hipi" depends="setup, test_settings">

    <echo message="Building the HIPI library..."/>

    <ant antfile="build.xml" dir="src">
      <property name="hadoop.home" value="${hadoop.home}" />
      <property name="hadoop.version" value="${hadoop.version}" />
      <property name="hadoop.classpath" value="${hadoop.classpath}" />

       <!-- https://drewnoakes.com/code/exif/ -->
      <property name="xmpcore.jar" value="../3rdparty/xmpcore-5.1.2.jar" />
      <property name="metadata.jar" value="../3rdparty/metadata-extractor-2.8.1.jar" />
       
      <!-- https://code.google.com/p/json-simple -->
      <property name="json.jar" value="../3rdparty/json-simple-1.1.1.jar"/>

      <!-- Unit test dependencies -->
      <property name="junit.jar" value="${hadoop.home}/common/lib/junit-4.11.jar" />
    	
      <!-- opencv -->
      <property name="opencv.jar" value="/Users/zverham/Documents/Development/opencv/build/bin/opencv-2411.jar" /> 	
    </ant>

    <echo message="HIPI library built." />

  </target>

  <!-- 'hibImport' is a Java program that creates a HIB from a set of
       images on the local file system -->
  <target name="hibImport">
    <echo message="Building hibImport..."/>
    <antcall target="compile">
      <param name="srcdir" value="src/hipi/util" />
      <param name="jarfilename" value="hibImport.jar" />
      <param name="jardir" value="bin" />
      <param name="mainclass" value="hipi.util.HibImport" />
    </antcall>
    <echo message="hibImport built." />
  </target>

  <!-- 'hibInfo' is a Java program that displays basic information
       about a HIB -->
  <target name="hibInfo">
    <echo message="Building hibInfo..."/>
    <antcall target="compile">
      <param name="srcdir" value="src/hipi/util" />
      <param name="jarfilename" value="hibInfo.jar" />
      <param name="jardir" value="bin" />
      <param name="mainclass" value="hipi.util.HibInfo" />
    </antcall>
    <echo message="hibInfo built." />
  </target>

  <!-- 'dumpHib' is a MapReduce program that extracts basic data about
       the images in a HIB -->
  <target name="dumpHib">
    <echo message="Building dumpHib..."/>
    <antcall target="compile">
      <param name="srcdir" value="src/hipi/util" />
      <param name="jarfilename" value="dumpHib.jar" />
      <param name="jardir" value="bin" />
      <param name="mainclass" value="hipi.util.DumpHib" />
    </antcall>
    <echo message="dumpHib built." />
  </target>

  <!-- 'jpegFromHib' is a MapReduce program that extracts the images
       in a HIB as individual JPEGs -->
  <target name="jpegFromHib">
    <echo message="Building jpegFromHib..."/>
    <antcall target="compile">
      <param name="srcdir" value="src/hipi/util" />
      <param name="jarfilename" value="jpegFromHib.jar" />
      <param name="jardir" value="bin" />
      <param name="mainclass" value="hipi.util.JpegFromHib" />
    </antcall>
    <echo message="jpegFromHib built." />
  </target>

  <!-- 'downloader' is a MapReduce program that creates a HIB from a
       set of images downloaded from the Internet -->
  <target name="downloader">
    <echo message="Building downloader..."/>
    <antcall target="compile">
      <param name="srcdir" value="src/hipi/util/downloader" />
      <param name="jarfilename" value="downloader.jar" />
      <param name="jardir" value="bin" />
      <param name="mainclass" value="hipi.util.downloader.Downloader" />
    </antcall>
    <echo message="downloader built." />
  </target>

  <!-- 'flickrDownloader' is a MapReduce program that creates a HIB
       from the Yahoo/Flickr 100M CC Dataset (see
       http://labs.yahoo.com/news/yfcc100m/) -->
  <target name="flickrDownloader">
    <echo message="Building flickrDownloader..."/>
    <antcall target="compile">
      <param name="srcdir" value="src/hipi/util/downloader" />
      <param name="jarfilename" value="flickrDownloader.jar" />
      <param name="jardir" value="bin" />
      <param name="mainclass" value="hipi.util.downloader.FlickrDownloader" />
    </antcall>
    <echo message="downloader built." />
  </target>

  <!-- 'covar' is a MapReduce program that computes the mean and
       covariance of small image patches sampled from a HIB -->
  <target name="covar">
    <echo message="Building covar..."/>
    <antcall target="compile">
      <param name="srcdir" value="src/hipi/examples/covar" />
      <param name="jarfilename" value="covar.jar" />
      <param name="jardir" value="bin" />
      <param name="mainclass" value="hipi.examples.covar.Covariance" />
    </antcall>
    <echo message="covar built."/>
  </target>

  <!-- Stand-alone HIPI unit tests -->
  <target name="testhipi" depends="setup,test_settings,hipi">
    <!-- <javac includeantruntime="false" fork="true" srcdir="src/hipi/test" destdir="./lib" classpath="${hadoop.classpath}:./lib/hipi-${hipi.version}.jar:${junit.jar}:${hamcrest.jar}" debug="yes"></javac> -->
    <java fork="true" maxmemory="2048m" classname="org.junit.runner.JUnitCore" classpath="${hadoop.classpath}:${hamcrest.jar}:${junit.jar}:${commons.logging.jar}:${guava.jar}:${commons.collections.jar}:${commons.configuration.jar}:${commons.lang.jar}:${slf4j.api.jar}:${log4j.jar}:${avro.jar}:./lib/hipi-${hipi.version}.jar:${twelvemonkeys.jar}">
      <arg value="hipi.test.AllHipiTests"/>
    </java>
  </target>
  
  <!-- MapReduce+HIPI unit tests -->
  <target name="testmr" depends="setup,test_settings,hipi,hibImport,hibInfo,jpegFromHib,downloader,flickrDownloader">
    <delete dir = "./testout" />
    <mkdir dir="./testout" />
    <!-- <javac includeantruntime="false" fork="true" srcdir="src/hipi/test" destdir="./lib" classpath="${hadoop.classpath}:./lib/hipi-${hipi.version}.jar:${junit.jar}:${hamcrest.jar}" debug="yes"></javac> -->
    <java fork="true" maxmemory="2048m" classname="org.junit.runner.JUnitCore" classpath="${hadoop.classpath}:${hamcrest.jar}:${junit.jar}:${commons.logging.jar}:${guava.jar}:${commons.collections.jar}:${commons.configuration.jar}:${commons.lang.jar}:${slf4j.api.jar}:${log4j.jar}:${avro.jar}:./lib/hipi-${hipi.version}.jar:${twelvemonkeys.jar}">
      <arg value="hipi.test.AllHipiMapReduceTests" />
    </java>
  </target>

  <!-- Perform all unit tests -->
  <target name="testall" depends="setup,test_settings,hipi,hibImport,hibInfo,jpegFromHib,downloader,flickrDownloader,testhipi,testmr">
  </target>

  <!-- Produces HIPI javadoc documentation for HIPI -->
   <target name="doc" depends="setup,test_settings,hipi">

    <!-- Delete existing version of docs -->
    <delete dir = "./doc/api" />
    <mkdir dir="./doc/api" />
     <javadoc packagenames="hipi.*"
	      excludepackagenames="hipi.container"
	      sourcepath="./src"
	      destdir="./doc/api"
	      windowtitle="HIPI - Hadoop Image Processing Interface"
	      classpath="${hadoop.classpath}:${junit.jar}:${xmpcore.jar}:${metadata.jar}">
       <doctitle><![CDATA[<h1>HIPI - Hadoop Image Processing Interface</h1>]]></doctitle>
       <bottom><![CDATA[<i>Copyright &#169; 2014 <a target="_blank" href="http://www.virginia.edu/">University of Virginia</a>. All Rights Reserved.</i>]]></bottom>
       <link href="http://docs.oracle.com/javase/6/docs/api/"/>
       <link href="http://hadoop.apache.org/docs/stable/api/"/>
       <link href="http://javadoc.metadata-extractor.googlecode.com/git/2.7.0/"/>
       <link href="http://www.json.org/javadoc/"/>
       <link href="http://www.javadocs.com/docs/com.twelvemonkeys.imageio/twelvemonkeys-imageio-batik/2.2"/>
     </javadoc>
    
   </target>
  
   <!-- Default target -->
   <target name="all" depends="hipi,hibImport,hibInfo,jpegFromHib,downloader,flickrDownloader,covar" />

   <!-- Clean -->
   <target name="clean">
     <delete dir="lib" />
     <delete dir="bin" />
   </target>
   
 </project>
